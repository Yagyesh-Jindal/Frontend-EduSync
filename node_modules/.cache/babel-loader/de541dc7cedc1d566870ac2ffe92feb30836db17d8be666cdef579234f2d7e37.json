{"ast":null,"code":"\"use client\";\n\nvar _jsxFileName = \"E:\\\\project-capg\\\\frontend\\\\src\\\\components\\\\ProtectedRoute.js\",\n  _s = $RefreshSig$();\nimport { Navigate } from \"react-router-dom\";\nimport { useAuth } from \"../contexts/AuthContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ProtectedRoute = ({\n  children,\n  requiredRole\n}) => {\n  _s();\n  const {\n    user,\n    loading\n  } = useAuth();\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loading-spinner\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"spinner-border text-primary\",\n        role: \"status\",\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"visually-hidden\",\n          children: \"Loading...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 12,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 7\n    }, this);\n  }\n  if (!user) {\n    return /*#__PURE__*/_jsxDEV(Navigate, {\n      to: \"/login\",\n      replace: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 12\n    }, this);\n  }\n  if (requiredRole && user.role !== requiredRole) {\n    return /*#__PURE__*/_jsxDEV(Navigate, {\n      to: \"/\",\n      replace: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 12\n    }, this);\n  }\n  return children;\n};\n_s(ProtectedRoute, \"EmJkapf7qiLC5Br5eCoEq4veZes=\", false, function () {\n  return [useAuth];\n});\n_c = ProtectedRoute;\nexport default ProtectedRoute;\nvar _c;\n$RefreshReg$(_c, \"ProtectedRoute\");","map":{"version":3,"names":["_jsxFileName","_s","$RefreshSig$","Navigate","useAuth","jsxDEV","_jsxDEV","ProtectedRoute","children","requiredRole","user","loading","className","role","fileName","lineNumber","columnNumber","to","replace","_c","$RefreshReg$"],"sources":["E:/project-capg/frontend/src/components/ProtectedRoute.js"],"sourcesContent":["\"use client\"\nimport { Navigate } from \"react-router-dom\"\nimport { useAuth } from \"../contexts/AuthContext\"\n\nconst ProtectedRoute = ({ children, requiredRole }) => {\n  const { user, loading } = useAuth()\n\n  if (loading) {\n    return (\n      <div className=\"loading-spinner\">\n        <div className=\"spinner-border text-primary\" role=\"status\">\n          <span className=\"visually-hidden\">Loading...</span>\n        </div>\n      </div>\n    )\n  }\n\n  if (!user) {\n    return <Navigate to=\"/login\" replace />\n  }\n\n  if (requiredRole && user.role !== requiredRole) {\n    return <Navigate to=\"/\" replace />\n  }\n\n  return children\n}\n\nexport default ProtectedRoute\n"],"mappings":"AAAA,YAAY;;AAAA,IAAAA,YAAA;EAAAC,EAAA,GAAAC,YAAA;AACZ,SAASC,QAAQ,QAAQ,kBAAkB;AAC3C,SAASC,OAAO,QAAQ,yBAAyB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEjD,MAAMC,cAAc,GAAGA,CAAC;EAAEC,QAAQ;EAAEC;AAAa,CAAC,KAAK;EAAAR,EAAA;EACrD,MAAM;IAAES,IAAI;IAAEC;EAAQ,CAAC,GAAGP,OAAO,CAAC,CAAC;EAEnC,IAAIO,OAAO,EAAE;IACX,oBACEL,OAAA;MAAKM,SAAS,EAAC,iBAAiB;MAAAJ,QAAA,eAC9BF,OAAA;QAAKM,SAAS,EAAC,6BAA6B;QAACC,IAAI,EAAC,QAAQ;QAAAL,QAAA,eACxDF,OAAA;UAAMM,SAAS,EAAC,iBAAiB;UAAAJ,QAAA,EAAC;QAAU;UAAAM,QAAA,EAAAd,YAAA;UAAAe,UAAA;UAAAC,YAAA;QAAA,OAAM;MAAC;QAAAF,QAAA,EAAAd,YAAA;QAAAe,UAAA;QAAAC,YAAA;MAAA,OAChD;IAAC;MAAAF,QAAA,EAAAd,YAAA;MAAAe,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC;EAEV;EAEA,IAAI,CAACN,IAAI,EAAE;IACT,oBAAOJ,OAAA,CAACH,QAAQ;MAACc,EAAE,EAAC,QAAQ;MAACC,OAAO;IAAA;MAAAJ,QAAA,EAAAd,YAAA;MAAAe,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EACzC;EAEA,IAAIP,YAAY,IAAIC,IAAI,CAACG,IAAI,KAAKJ,YAAY,EAAE;IAC9C,oBAAOH,OAAA,CAACH,QAAQ;MAACc,EAAE,EAAC,GAAG;MAACC,OAAO;IAAA;MAAAJ,QAAA,EAAAd,YAAA;MAAAe,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EACpC;EAEA,OAAOR,QAAQ;AACjB,CAAC;AAAAP,EAAA,CAtBKM,cAAc;EAAA,QACQH,OAAO;AAAA;AAAAe,EAAA,GAD7BZ,cAAc;AAwBpB,eAAeA,cAAc;AAAA,IAAAY,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}