{"ast":null,"code":"\"use client\";\n\nvar _jsxFileName = \"E:\\\\project-capg\\\\frontend\\\\src\\\\pages\\\\AssessmentPage.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nimport { Container, Row, Col, Card, Button, Form, Alert } from \"react-bootstrap\";\nimport { useParams, useNavigate, useLocation } from \"react-router-dom\";\nimport { assessmentService } from \"../services/api\";\nimport { useAuth } from \"../contexts/AuthContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AssessmentPage = () => {\n  _s();\n  const {\n    id\n  } = useParams();\n  const navigate = useNavigate();\n  const location = useLocation();\n  const {\n    user\n  } = useAuth();\n  const [assessment, setAssessment] = useState(null);\n  const [answers, setAnswers] = useState({});\n  const [currentQuestion, setCurrentQuestion] = useState(0);\n  const [submitted, setSubmitted] = useState(false);\n  const [result, setResult] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [viewMode, setViewMode] = useState(false);\n  useEffect(() => {\n    if (id && id !== 'undefined') {\n      fetchAssessment();\n\n      // Check if we're in instructor mode from either the user role or URL parameter\n      const searchParams = new URLSearchParams(location.search);\n      const isInstructorMode = user && user.role === 'Instructor' || searchParams.get('mode') === 'instructor';\n      if (isInstructorMode) {\n        setViewMode(true);\n      }\n    } else {\n      setError(\"Invalid assessment ID\");\n      setLoading(false);\n    }\n  }, [id, user, location.search]);\n  const fetchAssessment = async () => {\n    try {\n      const response = await assessmentService.getAssessmentById(id);\n      console.log(\"Assessment data:\", response.data);\n      if (response.data) {\n        const assessmentData = response.data;\n\n        // Parse questions if they're stored as a JSON string\n        if (typeof assessmentData.questions === 'string') {\n          try {\n            assessmentData.questions = JSON.parse(assessmentData.questions);\n            console.log(\"Parsed questions:\", assessmentData.questions);\n          } catch (e) {\n            console.error(\"Error parsing questions:\", e);\n            assessmentData.questions = [];\n          }\n        }\n\n        // Ensure questions is an array\n        if (!Array.isArray(assessmentData.questions)) {\n          console.log(\"Questions is not an array, creating mock questions for testing\");\n          // Create mock questions for testing if none exist\n          assessmentData.questions = [{\n            id: \"q1\",\n            text: \"What is the capital of France?\",\n            options: [{\n              id: \"a\",\n              text: \"London\"\n            }, {\n              id: \"b\",\n              text: \"Paris\"\n            }, {\n              id: \"c\",\n              text: \"Berlin\"\n            }, {\n              id: \"d\",\n              text: \"Madrid\"\n            }],\n            correctOption: \"b\"\n          }, {\n            id: \"q2\",\n            text: \"Which planet is known as the Red Planet?\",\n            options: [{\n              id: \"a\",\n              text: \"Venus\"\n            }, {\n              id: \"b\",\n              text: \"Mars\"\n            }, {\n              id: \"c\",\n              text: \"Jupiter\"\n            }, {\n              id: \"d\",\n              text: \"Saturn\"\n            }],\n            correctOption: \"b\"\n          }];\n        }\n\n        // Format questions if they don't have the expected structure\n        assessmentData.questions = assessmentData.questions.map((q, index) => {\n          // If question doesn't have an id, add one\n          if (!q.id) q.id = `q${index + 1}`;\n\n          // If question doesn't have text but has questionText\n          if (!q.text && q.questionText) q.text = q.questionText;\n          // If neither exists, provide default text\n          if (!q.text && !q.questionText) q.text = `Question ${index + 1}`;\n\n          // Ensure options are in the correct format\n          if (!q.options || !Array.isArray(q.options) || q.options.length === 0) {\n            q.options = [{\n              id: \"a\",\n              text: \"Option A\"\n            }, {\n              id: \"b\",\n              text: \"Option B\"\n            }, {\n              id: \"c\",\n              text: \"Option C\"\n            }, {\n              id: \"d\",\n              text: \"Option D\"\n            }];\n          }\n\n          // Ensure each option has id and text properties\n          q.options = q.options.map((opt, optIndex) => {\n            if (typeof opt === 'string') {\n              return {\n                id: `opt${optIndex}`,\n                text: opt\n              };\n            }\n            if (!opt.id) opt.id = `opt${optIndex}`;\n            if (!opt.text && opt.optionText) opt.text = opt.optionText;\n            if (!opt.text) opt.text = `Option ${optIndex + 1}`;\n            return opt;\n          });\n          return q;\n        });\n        console.log(\"Processed assessment data:\", assessmentData);\n        setAssessment(assessmentData);\n      } else {\n        setError(\"Assessment not found\");\n      }\n    } catch (error) {\n      console.error(\"Error fetching assessment:\", error);\n      setError(\"Error loading assessment data\");\n    } finally {\n      setLoading(false);\n    }\n  };\n  const handleAnswerChange = (questionId, optionId) => {\n    setAnswers({\n      ...answers,\n      [questionId]: optionId\n    });\n  };\n  const clearCurrentAnswer = () => {\n    if (!assessment) return;\n    const currentQuestionId = assessment.questions[currentQuestion].id;\n    const updatedAnswers = {\n      ...answers\n    };\n    delete updatedAnswers[currentQuestionId];\n    setAnswers(updatedAnswers);\n  };\n\n  // Calculate score based on correct answers\n  const calculateScore = () => {\n    if (!assessment || !assessment.questions) return {\n      score: 0,\n      maxScore: 0,\n      percentage: 0\n    };\n    const totalQuestions = assessment.questions.length;\n    const maxScore = assessment.maxScore || 100; // Use assessment's maxScore or default to 100\n\n    // Count correct answers\n    let correctAnswers = 0;\n    assessment.questions.forEach(question => {\n      const userAnswer = answers[question.id];\n\n      // Check if user's answer matches the correct answer\n      if (userAnswer && question.correctOption && userAnswer === question.correctOption) {\n        correctAnswers++;\n      }\n    });\n    console.log(`Correct answers: ${correctAnswers} out of ${totalQuestions}`);\n\n    // Calculate score based on the assessment's maxScore and number of questions\n    const scorePerQuestion = maxScore / totalQuestions;\n    const score = Math.round(correctAnswers * scorePerQuestion);\n    const percentage = Math.round(correctAnswers / totalQuestions * 100);\n    return {\n      score,\n      maxScore,\n      percentage,\n      correctAnswers,\n      totalQuestions,\n      passed: percentage >= 60 // Pass threshold of 60%\n    };\n  };\n  const handleSubmit = async () => {\n    try {\n      setLoading(true);\n\n      // Submit answers to backend for scoring\n      const response = await assessmentService.submitAssessment(id, answers);\n\n      // Use the result from the backend\n      const calculatedResult = {\n        score: response.data.score,\n        maxScore: response.data.maxScore,\n        percentage: response.data.percentage,\n        passed: response.data.passed,\n        correctAnswers: response.data.correctAnswers,\n        totalQuestions: response.data.totalQuestions\n      };\n      setResult(calculatedResult);\n      setSubmitted(true);\n    } catch (error) {\n      console.error(\"Error submitting assessment:\", error);\n\n      // Fallback to frontend calculation if backend submission fails\n      const calculatedResult = calculateScore();\n      setResult(calculatedResult);\n      setSubmitted(true);\n    } finally {\n      setLoading(false);\n    }\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loading-spinner\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"spinner-border text-primary\",\n        role: \"status\",\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"visually-hidden\",\n          children: \"Loading assessment...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 224,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 223,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 222,\n      columnNumber: 7\n    }, this);\n  }\n  if (error || !assessment) {\n    return /*#__PURE__*/_jsxDEV(Container, {\n      className: \"py-5\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-center\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Assessment Not Found\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 234,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-muted\",\n          children: error || \"The assessment you're looking for doesn't exist.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 235,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"primary\",\n          onClick: () => navigate(\"/student-dashboard\"),\n          children: \"Back to Dashboard\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 236,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 233,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 232,\n      columnNumber: 7\n    }, this);\n  }\n\n  // If no questions or empty questions array\n  if (!assessment.questions || assessment.questions.length === 0) {\n    return /*#__PURE__*/_jsxDEV(Container, {\n      className: \"py-5\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-center\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"No Questions Available\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 249,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-muted\",\n          children: \"This assessment doesn't have any questions yet.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 250,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"primary\",\n          onClick: () => navigate(\"/student-dashboard\"),\n          children: \"Back to Dashboard\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 251,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 248,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 247,\n      columnNumber: 7\n    }, this);\n  }\n  if (submitted && result) {\n    return /*#__PURE__*/_jsxDEV(Container, {\n      className: \"py-5\",\n      children: /*#__PURE__*/_jsxDEV(Row, {\n        className: \"justify-content-center\",\n        children: /*#__PURE__*/_jsxDEV(Col, {\n          md: 8,\n          children: /*#__PURE__*/_jsxDEV(Card, {\n            className: \"assessment-result\",\n            children: [/*#__PURE__*/_jsxDEV(Card.Header, {\n              className: \"text-center\",\n              children: /*#__PURE__*/_jsxDEV(\"h3\", {\n                children: \"Assessment Completed!\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 266,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 265,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n              className: \"text-center\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"mb-4\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"result-circle mb-3\",\n                  children: [result.percentage, \"%\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 270,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n                  children: [\"Your Score: \", result.score, \" / \", result.maxScore]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 273,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: [\"Correct Answers: \", result.correctAnswers, \" / \", result.totalQuestions]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 276,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 269,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Alert, {\n                variant: result.passed ? \"success\" : \"warning\",\n                children: result.passed ? \"Congratulations! You passed the assessment.\" : \"You did not pass the assessment. You need at least 60% to pass.\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 282,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"d-flex justify-content-center gap-3\",\n                children: [/*#__PURE__*/_jsxDEV(Button, {\n                  variant: \"primary\",\n                  onClick: () => navigate(\"/student-dashboard\"),\n                  children: \"Back to Dashboard\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 289,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Button, {\n                  variant: \"outline-primary\",\n                  onClick: () => {\n                    setSubmitted(false);\n                    setAnswers({});\n                    setCurrentQuestion(0);\n                  },\n                  children: \"Retake Assessment\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 292,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 288,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 268,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 264,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 263,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 262,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 261,\n      columnNumber: 7\n    }, this);\n  }\n  const currentQ = assessment.questions[currentQuestion];\n  return /*#__PURE__*/_jsxDEV(Container, {\n    className: \"py-4\",\n    children: [viewMode && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-4\",\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"outline-secondary\",\n        onClick: () => navigate('/assessment-management'),\n        children: \"\\u2190 Back to Assessment Management\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 314,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 313,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Row, {\n      children: [/*#__PURE__*/_jsxDEV(Col, {\n        md: 8,\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          children: [/*#__PURE__*/_jsxDEV(Card.Header, {\n            className: \"d-flex justify-content-between align-items-center\",\n            children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n              children: assessment.title || \"Assessment\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 327,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"d-flex align-items-center gap-3\",\n              children: /*#__PURE__*/_jsxDEV(\"span\", {\n                children: [\"Question \", currentQuestion + 1, \" of \", assessment.questions.length]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 329,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 328,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 326,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"assessment-question\",\n              children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n                className: \"mb-4\",\n                children: currentQ.text\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 336,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"options-container\",\n                children: currentQ.options.map(option => /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: `option-item ${answers[currentQ.id] === option.id ? 'selected' : ''}`,\n                  onClick: () => handleAnswerChange(currentQ.id, option.id),\n                  children: /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"option-content\",\n                    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"radio-circle\",\n                      children: answers[currentQ.id] === option.id && /*#__PURE__*/_jsxDEV(\"div\", {\n                        className: \"radio-dot\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 346,\n                        columnNumber: 66\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 345,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                      className: \"option-text\",\n                      children: option.text\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 348,\n                      columnNumber: 25\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 344,\n                    columnNumber: 23\n                  }, this)\n                }, option.id, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 339,\n                  columnNumber: 21\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 337,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"d-flex justify-content-end mt-3\",\n                children: /*#__PURE__*/_jsxDEV(Button, {\n                  variant: \"outline-secondary\",\n                  size: \"sm\",\n                  onClick: clearCurrentAnswer,\n                  disabled: !answers[currentQ.id],\n                  children: \"Clear Answer\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 355,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 354,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 335,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"d-flex justify-content-between mt-4\",\n              children: [/*#__PURE__*/_jsxDEV(Button, {\n                variant: \"outline-secondary\",\n                disabled: currentQuestion === 0,\n                onClick: () => setCurrentQuestion(currentQuestion - 1),\n                children: \"Previous\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 367,\n                columnNumber: 17\n              }, this), currentQuestion === assessment.questions.length - 1 ? /*#__PURE__*/_jsxDEV(Button, {\n                variant: \"success\",\n                onClick: handleSubmit,\n                children: \"Submit Assessment\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 376,\n                columnNumber: 19\n              }, this) : /*#__PURE__*/_jsxDEV(Button, {\n                variant: \"primary\",\n                onClick: () => setCurrentQuestion(currentQuestion + 1),\n                children: \"Next\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 380,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 366,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 334,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 325,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 324,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        md: 4,\n        children: [/*#__PURE__*/_jsxDEV(Card, {\n          children: [/*#__PURE__*/_jsxDEV(Card.Header, {\n            children: /*#__PURE__*/_jsxDEV(\"h5\", {\n              className: \"mb-0\",\n              children: \"Assessment Progress\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 392,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 391,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"mb-3\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"d-flex justify-content-between mb-1\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  children: \"Progress\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 397,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  children: [Math.round((currentQuestion + 1) / assessment.questions.length * 100), \"%\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 398,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 396,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"progress\",\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"progress-bar\",\n                  style: {\n                    width: `${(currentQuestion + 1) / assessment.questions.length * 100}%`\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 401,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 400,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 395,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"mb-3\",\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Questions Answered:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 409,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"ms-2\",\n                children: [Object.keys(answers).length, \" / \", assessment.questions.length]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 410,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 408,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"mb-3\",\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Max Score:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 416,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"ms-2\",\n                children: assessment.maxScore || 100\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 417,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 415,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 394,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 390,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Card, {\n          className: \"mt-3\",\n          children: [/*#__PURE__*/_jsxDEV(Card.Header, {\n            children: /*#__PURE__*/_jsxDEV(\"h5\", {\n              className: \"mb-0\",\n              children: \"Question Navigator\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 424,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 423,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"d-flex flex-wrap gap-2 question-navigator\",\n              children: assessment.questions.map((_, index) => /*#__PURE__*/_jsxDEV(Button, {\n                variant: index === currentQuestion ? \"primary\" : answers[assessment.questions[index].id] ? \"success\" : \"outline-secondary\",\n                size: \"sm\",\n                onClick: () => setCurrentQuestion(index),\n                children: index + 1\n              }, index, false, {\n                fileName: _jsxFileName,\n                lineNumber: 429,\n                columnNumber: 19\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 427,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 426,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 422,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 389,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 323,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 311,\n    columnNumber: 5\n  }, this);\n};\n_s(AssessmentPage, \"LM7rySOWGnxhi6eCG9E/qkXPINo=\", false, function () {\n  return [useParams, useNavigate, useLocation, useAuth];\n});\n_c = AssessmentPage;\nexport default AssessmentPage;\nvar _c;\n$RefreshReg$(_c, \"AssessmentPage\");","map":{"version":3,"names":["_jsxFileName","_s","$RefreshSig$","useState","useEffect","Container","Row","Col","Card","Button","Form","Alert","useParams","useNavigate","useLocation","assessmentService","useAuth","jsxDEV","_jsxDEV","AssessmentPage","id","navigate","location","user","assessment","setAssessment","answers","setAnswers","currentQuestion","setCurrentQuestion","submitted","setSubmitted","result","setResult","loading","setLoading","error","setError","viewMode","setViewMode","fetchAssessment","searchParams","URLSearchParams","search","isInstructorMode","role","get","response","getAssessmentById","console","log","data","assessmentData","questions","JSON","parse","e","Array","isArray","text","options","correctOption","map","q","index","questionText","length","opt","optIndex","optionText","handleAnswerChange","questionId","optionId","clearCurrentAnswer","currentQuestionId","updatedAnswers","calculateScore","score","maxScore","percentage","totalQuestions","correctAnswers","forEach","question","userAnswer","scorePerQuestion","Math","round","passed","handleSubmit","submitAssessment","calculatedResult","className","children","fileName","lineNumber","columnNumber","variant","onClick","md","Header","Body","currentQ","title","option","size","disabled","style","width","Object","keys","_","_c","$RefreshReg$"],"sources":["E:/project-capg/frontend/src/pages/AssessmentPage.js"],"sourcesContent":["\"use client\"\n\nimport { useState, useEffect } from \"react\"\nimport { Container, Row, Col, Card, Button, Form, Alert } from \"react-bootstrap\"\nimport { useParams, useNavigate, useLocation } from \"react-router-dom\"\nimport { assessmentService } from \"../services/api\"\nimport { useAuth } from \"../contexts/AuthContext\"\n\nconst AssessmentPage = () => {\n  const { id } = useParams()\n  const navigate = useNavigate()\n  const location = useLocation()\n  const { user } = useAuth()\n  const [assessment, setAssessment] = useState(null)\n  const [answers, setAnswers] = useState({})\n  const [currentQuestion, setCurrentQuestion] = useState(0)\n  const [submitted, setSubmitted] = useState(false)\n  const [result, setResult] = useState(null)\n  const [loading, setLoading] = useState(true)\n  const [error, setError] = useState(null)\n  const [viewMode, setViewMode] = useState(false)\n\n  useEffect(() => {\n    if (id && id !== 'undefined') {\n      fetchAssessment()\n      \n      // Check if we're in instructor mode from either the user role or URL parameter\n      const searchParams = new URLSearchParams(location.search)\n      const isInstructorMode = \n        (user && user.role === 'Instructor') || \n        searchParams.get('mode') === 'instructor'\n      \n      if (isInstructorMode) {\n        setViewMode(true)\n      }\n    } else {\n      setError(\"Invalid assessment ID\")\n      setLoading(false)\n    }\n  }, [id, user, location.search])\n\n  const fetchAssessment = async () => {\n    try {\n      const response = await assessmentService.getAssessmentById(id)\n      console.log(\"Assessment data:\", response.data)\n      \n      if (response.data) {\n        const assessmentData = response.data\n        \n        // Parse questions if they're stored as a JSON string\n        if (typeof assessmentData.questions === 'string') {\n          try {\n            assessmentData.questions = JSON.parse(assessmentData.questions)\n            console.log(\"Parsed questions:\", assessmentData.questions)\n          } catch (e) {\n            console.error(\"Error parsing questions:\", e)\n            assessmentData.questions = []\n          }\n        }\n        \n        // Ensure questions is an array\n        if (!Array.isArray(assessmentData.questions)) {\n          console.log(\"Questions is not an array, creating mock questions for testing\")\n          // Create mock questions for testing if none exist\n          assessmentData.questions = [\n            {\n              id: \"q1\",\n              text: \"What is the capital of France?\",\n              options: [\n                { id: \"a\", text: \"London\" },\n                { id: \"b\", text: \"Paris\" },\n                { id: \"c\", text: \"Berlin\" },\n                { id: \"d\", text: \"Madrid\" }\n              ],\n              correctOption: \"b\"\n            },\n            {\n              id: \"q2\",\n              text: \"Which planet is known as the Red Planet?\",\n              options: [\n                { id: \"a\", text: \"Venus\" },\n                { id: \"b\", text: \"Mars\" },\n                { id: \"c\", text: \"Jupiter\" },\n                { id: \"d\", text: \"Saturn\" }\n              ],\n              correctOption: \"b\"\n            }\n          ]\n        }\n        \n        // Format questions if they don't have the expected structure\n        assessmentData.questions = assessmentData.questions.map((q, index) => {\n          // If question doesn't have an id, add one\n          if (!q.id) q.id = `q${index + 1}`;\n          \n          // If question doesn't have text but has questionText\n          if (!q.text && q.questionText) q.text = q.questionText;\n          // If neither exists, provide default text\n          if (!q.text && !q.questionText) q.text = `Question ${index + 1}`;\n          \n          // Ensure options are in the correct format\n          if (!q.options || !Array.isArray(q.options) || q.options.length === 0) {\n            q.options = [\n              { id: \"a\", text: \"Option A\" },\n              { id: \"b\", text: \"Option B\" },\n              { id: \"c\", text: \"Option C\" },\n              { id: \"d\", text: \"Option D\" }\n            ];\n          }\n          \n          // Ensure each option has id and text properties\n          q.options = q.options.map((opt, optIndex) => {\n            if (typeof opt === 'string') {\n              return { id: `opt${optIndex}`, text: opt };\n            }\n            if (!opt.id) opt.id = `opt${optIndex}`;\n            if (!opt.text && opt.optionText) opt.text = opt.optionText;\n            if (!opt.text) opt.text = `Option ${optIndex + 1}`;\n            return opt;\n          });\n          \n          return q;\n        });\n        \n        console.log(\"Processed assessment data:\", assessmentData);\n        setAssessment(assessmentData);\n      } else {\n        setError(\"Assessment not found\")\n      }\n    } catch (error) {\n      console.error(\"Error fetching assessment:\", error)\n      setError(\"Error loading assessment data\")\n    } finally {\n      setLoading(false)\n    }\n  }\n\n  const handleAnswerChange = (questionId, optionId) => {\n    setAnswers({\n      ...answers,\n      [questionId]: optionId,\n    })\n  }\n\n  const clearCurrentAnswer = () => {\n    if (!assessment) return;\n    \n    const currentQuestionId = assessment.questions[currentQuestion].id;\n    const updatedAnswers = { ...answers };\n    delete updatedAnswers[currentQuestionId];\n    setAnswers(updatedAnswers);\n  }\n\n  // Calculate score based on correct answers\n  const calculateScore = () => {\n    if (!assessment || !assessment.questions) return { score: 0, maxScore: 0, percentage: 0 };\n    \n    const totalQuestions = assessment.questions.length;\n    const maxScore = assessment.maxScore || 100; // Use assessment's maxScore or default to 100\n    \n    // Count correct answers\n    let correctAnswers = 0;\n    assessment.questions.forEach(question => {\n      const userAnswer = answers[question.id];\n      \n      // Check if user's answer matches the correct answer\n      if (userAnswer && question.correctOption && userAnswer === question.correctOption) {\n        correctAnswers++;\n      }\n    });\n    \n    console.log(`Correct answers: ${correctAnswers} out of ${totalQuestions}`);\n    \n    // Calculate score based on the assessment's maxScore and number of questions\n    const scorePerQuestion = maxScore / totalQuestions;\n    const score = Math.round(correctAnswers * scorePerQuestion);\n    const percentage = Math.round((correctAnswers / totalQuestions) * 100);\n    \n    return {\n      score,\n      maxScore,\n      percentage,\n      correctAnswers,\n      totalQuestions,\n      passed: percentage >= 60 // Pass threshold of 60%\n    };\n  }\n\n  const handleSubmit = async () => {\n    try {\n      setLoading(true);\n      \n      // Submit answers to backend for scoring\n      const response = await assessmentService.submitAssessment(id, answers);\n      \n      // Use the result from the backend\n      const calculatedResult = {\n        score: response.data.score,\n        maxScore: response.data.maxScore,\n        percentage: response.data.percentage,\n        passed: response.data.passed,\n        correctAnswers: response.data.correctAnswers,\n        totalQuestions: response.data.totalQuestions\n      };\n      \n      setResult(calculatedResult);\n      setSubmitted(true);\n    } catch (error) {\n      console.error(\"Error submitting assessment:\", error);\n      \n      // Fallback to frontend calculation if backend submission fails\n      const calculatedResult = calculateScore();\n      setResult(calculatedResult);\n      setSubmitted(true);\n    } finally {\n      setLoading(false);\n    }\n  }\n\n  if (loading) {\n    return (\n      <div className=\"loading-spinner\">\n        <div className=\"spinner-border text-primary\" role=\"status\">\n          <span className=\"visually-hidden\">Loading assessment...</span>\n        </div>\n      </div>\n    )\n  }\n\n  if (error || !assessment) {\n    return (\n      <Container className=\"py-5\">\n        <div className=\"text-center\">\n          <h3>Assessment Not Found</h3>\n          <p className=\"text-muted\">{error || \"The assessment you're looking for doesn't exist.\"}</p>\n          <Button variant=\"primary\" onClick={() => navigate(\"/student-dashboard\")}>\n            Back to Dashboard\n          </Button>\n        </div>\n      </Container>\n    )\n  }\n\n  // If no questions or empty questions array\n  if (!assessment.questions || assessment.questions.length === 0) {\n    return (\n      <Container className=\"py-5\">\n        <div className=\"text-center\">\n          <h3>No Questions Available</h3>\n          <p className=\"text-muted\">This assessment doesn't have any questions yet.</p>\n          <Button variant=\"primary\" onClick={() => navigate(\"/student-dashboard\")}>\n            Back to Dashboard\n          </Button>\n        </div>\n      </Container>\n    )\n  }\n\n  if (submitted && result) {\n    return (\n      <Container className=\"py-5\">\n        <Row className=\"justify-content-center\">\n          <Col md={8}>\n            <Card className=\"assessment-result\">\n              <Card.Header className=\"text-center\">\n                <h3>Assessment Completed!</h3>\n              </Card.Header>\n              <Card.Body className=\"text-center\">\n                <div className=\"mb-4\">\n                  <div className=\"result-circle mb-3\">\n                    {result.percentage}%\n                  </div>\n                  <h4>\n                    Your Score: {result.score} / {result.maxScore}\n                  </h4>\n                  <p>\n                    Correct Answers: {result.correctAnswers} / {result.totalQuestions}\n                  </p>\n                </div>\n                \n                {/* Success message - always show congratulations */}\n                <Alert variant={result.passed ? \"success\" : \"warning\"}>\n                  {result.passed \n                    ? \"Congratulations! You passed the assessment.\" \n                    : \"You did not pass the assessment. You need at least 60% to pass.\"}\n                </Alert>\n                \n                <div className=\"d-flex justify-content-center gap-3\">\n                  <Button variant=\"primary\" onClick={() => navigate(\"/student-dashboard\")}>\n                    Back to Dashboard\n                  </Button>\n                  <Button variant=\"outline-primary\" onClick={() => {\n                    setSubmitted(false);\n                    setAnswers({});\n                    setCurrentQuestion(0);\n                  }}>\n                    Retake Assessment\n                  </Button>\n                </div>\n              </Card.Body>\n            </Card>\n          </Col>\n        </Row>\n      </Container>\n    )\n  }\n\n  const currentQ = assessment.questions[currentQuestion]\n\n  return (\n    <Container className=\"py-4\">\n      {viewMode && (\n        <div className=\"mb-4\">\n          <Button \n            variant=\"outline-secondary\" \n            onClick={() => navigate('/assessment-management')}\n          >\n            ← Back to Assessment Management\n          </Button>\n        </div>\n      )}\n      \n      <Row>\n        <Col md={8}>\n          <Card>\n            <Card.Header className=\"d-flex justify-content-between align-items-center\">\n              <h4>{assessment.title || \"Assessment\"}</h4>\n              <div className=\"d-flex align-items-center gap-3\">\n                <span>\n                  Question {currentQuestion + 1} of {assessment.questions.length}\n                </span>\n              </div>\n            </Card.Header>\n            <Card.Body>\n              <div className=\"assessment-question\">\n                <h5 className=\"mb-4\">{currentQ.text}</h5>\n                <div className=\"options-container\">\n                  {currentQ.options.map((option) => (\n                    <div \n                      key={option.id}\n                      className={`option-item ${answers[currentQ.id] === option.id ? 'selected' : ''}`}\n                      onClick={() => handleAnswerChange(currentQ.id, option.id)}\n                    >\n                      <div className=\"option-content\">\n                        <div className=\"radio-circle\">\n                          {answers[currentQ.id] === option.id && <div className=\"radio-dot\"></div>}\n                        </div>\n                        <span className=\"option-text\">{option.text}</span>\n                      </div>\n                    </div>\n                  ))}\n                </div>\n\n                <div className=\"d-flex justify-content-end mt-3\">\n                  <Button \n                    variant=\"outline-secondary\" \n                    size=\"sm\" \n                    onClick={clearCurrentAnswer}\n                    disabled={!answers[currentQ.id]}\n                  >\n                    Clear Answer\n                  </Button>\n                </div>\n              </div>\n\n              <div className=\"d-flex justify-content-between mt-4\">\n                <Button\n                  variant=\"outline-secondary\"\n                  disabled={currentQuestion === 0}\n                  onClick={() => setCurrentQuestion(currentQuestion - 1)}\n                >\n                  Previous\n                </Button>\n\n                {currentQuestion === assessment.questions.length - 1 ? (\n                  <Button variant=\"success\" onClick={handleSubmit}>\n                    Submit Assessment\n                  </Button>\n                ) : (\n                  <Button variant=\"primary\" onClick={() => setCurrentQuestion(currentQuestion + 1)}>\n                    Next\n                  </Button>\n                )}\n              </div>\n            </Card.Body>\n          </Card>\n        </Col>\n\n        <Col md={4}>\n          <Card>\n            <Card.Header>\n              <h5 className=\"mb-0\">Assessment Progress</h5>\n            </Card.Header>\n            <Card.Body>\n              <div className=\"mb-3\">\n                <div className=\"d-flex justify-content-between mb-1\">\n                  <span>Progress</span>\n                  <span>{Math.round(((currentQuestion + 1) / assessment.questions.length) * 100)}%</span>\n                </div>\n                <div className=\"progress\">\n                  <div\n                    className=\"progress-bar\"\n                    style={{ width: `${((currentQuestion + 1) / assessment.questions.length) * 100}%` }}\n                  ></div>\n                </div>\n              </div>\n\n              <div className=\"mb-3\">\n                <strong>Questions Answered:</strong>\n                <span className=\"ms-2\">\n                  {Object.keys(answers).length} / {assessment.questions.length}\n                </span>\n              </div>\n\n              <div className=\"mb-3\">\n                <strong>Max Score:</strong>\n                <span className=\"ms-2\">{assessment.maxScore || 100}</span>\n              </div>\n            </Card.Body>\n          </Card>\n\n          <Card className=\"mt-3\">\n            <Card.Header>\n              <h5 className=\"mb-0\">Question Navigator</h5>\n            </Card.Header>\n            <Card.Body>\n              <div className=\"d-flex flex-wrap gap-2 question-navigator\">\n                {assessment.questions.map((_, index) => (\n                  <Button\n                    key={index}\n                    variant={\n                      index === currentQuestion\n                        ? \"primary\"\n                        : answers[assessment.questions[index].id]\n                          ? \"success\"\n                          : \"outline-secondary\"\n                    }\n                    size=\"sm\"\n                    onClick={() => setCurrentQuestion(index)}\n                  >\n                    {index + 1}\n                  </Button>\n                ))}\n              </div>\n            </Card.Body>\n          </Card>\n        </Col>\n      </Row>\n    </Container>\n  )\n}\n\nexport default AssessmentPage\n"],"mappings":"AAAA,YAAY;;AAAA,IAAAA,YAAA;EAAAC,EAAA,GAAAC,YAAA;AAEZ,SAASC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC3C,SAASC,SAAS,EAAEC,GAAG,EAAEC,GAAG,EAAEC,IAAI,EAAEC,MAAM,EAAEC,IAAI,EAAEC,KAAK,QAAQ,iBAAiB;AAChF,SAASC,SAAS,EAAEC,WAAW,EAAEC,WAAW,QAAQ,kBAAkB;AACtE,SAASC,iBAAiB,QAAQ,iBAAiB;AACnD,SAASC,OAAO,QAAQ,yBAAyB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEjD,MAAMC,cAAc,GAAGA,CAAA,KAAM;EAAAlB,EAAA;EAC3B,MAAM;IAAEmB;EAAG,CAAC,GAAGR,SAAS,CAAC,CAAC;EAC1B,MAAMS,QAAQ,GAAGR,WAAW,CAAC,CAAC;EAC9B,MAAMS,QAAQ,GAAGR,WAAW,CAAC,CAAC;EAC9B,MAAM;IAAES;EAAK,CAAC,GAAGP,OAAO,CAAC,CAAC;EAC1B,MAAM,CAACQ,UAAU,EAAEC,aAAa,CAAC,GAAGtB,QAAQ,CAAC,IAAI,CAAC;EAClD,MAAM,CAACuB,OAAO,EAAEC,UAAU,CAAC,GAAGxB,QAAQ,CAAC,CAAC,CAAC,CAAC;EAC1C,MAAM,CAACyB,eAAe,EAAEC,kBAAkB,CAAC,GAAG1B,QAAQ,CAAC,CAAC,CAAC;EACzD,MAAM,CAAC2B,SAAS,EAAEC,YAAY,CAAC,GAAG5B,QAAQ,CAAC,KAAK,CAAC;EACjD,MAAM,CAAC6B,MAAM,EAAEC,SAAS,CAAC,GAAG9B,QAAQ,CAAC,IAAI,CAAC;EAC1C,MAAM,CAAC+B,OAAO,EAAEC,UAAU,CAAC,GAAGhC,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAACiC,KAAK,EAAEC,QAAQ,CAAC,GAAGlC,QAAQ,CAAC,IAAI,CAAC;EACxC,MAAM,CAACmC,QAAQ,EAAEC,WAAW,CAAC,GAAGpC,QAAQ,CAAC,KAAK,CAAC;EAE/CC,SAAS,CAAC,MAAM;IACd,IAAIgB,EAAE,IAAIA,EAAE,KAAK,WAAW,EAAE;MAC5BoB,eAAe,CAAC,CAAC;;MAEjB;MACA,MAAMC,YAAY,GAAG,IAAIC,eAAe,CAACpB,QAAQ,CAACqB,MAAM,CAAC;MACzD,MAAMC,gBAAgB,GACnBrB,IAAI,IAAIA,IAAI,CAACsB,IAAI,KAAK,YAAY,IACnCJ,YAAY,CAACK,GAAG,CAAC,MAAM,CAAC,KAAK,YAAY;MAE3C,IAAIF,gBAAgB,EAAE;QACpBL,WAAW,CAAC,IAAI,CAAC;MACnB;IACF,CAAC,MAAM;MACLF,QAAQ,CAAC,uBAAuB,CAAC;MACjCF,UAAU,CAAC,KAAK,CAAC;IACnB;EACF,CAAC,EAAE,CAACf,EAAE,EAAEG,IAAI,EAAED,QAAQ,CAACqB,MAAM,CAAC,CAAC;EAE/B,MAAMH,eAAe,GAAG,MAAAA,CAAA,KAAY;IAClC,IAAI;MACF,MAAMO,QAAQ,GAAG,MAAMhC,iBAAiB,CAACiC,iBAAiB,CAAC5B,EAAE,CAAC;MAC9D6B,OAAO,CAACC,GAAG,CAAC,kBAAkB,EAAEH,QAAQ,CAACI,IAAI,CAAC;MAE9C,IAAIJ,QAAQ,CAACI,IAAI,EAAE;QACjB,MAAMC,cAAc,GAAGL,QAAQ,CAACI,IAAI;;QAEpC;QACA,IAAI,OAAOC,cAAc,CAACC,SAAS,KAAK,QAAQ,EAAE;UAChD,IAAI;YACFD,cAAc,CAACC,SAAS,GAAGC,IAAI,CAACC,KAAK,CAACH,cAAc,CAACC,SAAS,CAAC;YAC/DJ,OAAO,CAACC,GAAG,CAAC,mBAAmB,EAAEE,cAAc,CAACC,SAAS,CAAC;UAC5D,CAAC,CAAC,OAAOG,CAAC,EAAE;YACVP,OAAO,CAACb,KAAK,CAAC,0BAA0B,EAAEoB,CAAC,CAAC;YAC5CJ,cAAc,CAACC,SAAS,GAAG,EAAE;UAC/B;QACF;;QAEA;QACA,IAAI,CAACI,KAAK,CAACC,OAAO,CAACN,cAAc,CAACC,SAAS,CAAC,EAAE;UAC5CJ,OAAO,CAACC,GAAG,CAAC,gEAAgE,CAAC;UAC7E;UACAE,cAAc,CAACC,SAAS,GAAG,CACzB;YACEjC,EAAE,EAAE,IAAI;YACRuC,IAAI,EAAE,gCAAgC;YACtCC,OAAO,EAAE,CACP;cAAExC,EAAE,EAAE,GAAG;cAAEuC,IAAI,EAAE;YAAS,CAAC,EAC3B;cAAEvC,EAAE,EAAE,GAAG;cAAEuC,IAAI,EAAE;YAAQ,CAAC,EAC1B;cAAEvC,EAAE,EAAE,GAAG;cAAEuC,IAAI,EAAE;YAAS,CAAC,EAC3B;cAAEvC,EAAE,EAAE,GAAG;cAAEuC,IAAI,EAAE;YAAS,CAAC,CAC5B;YACDE,aAAa,EAAE;UACjB,CAAC,EACD;YACEzC,EAAE,EAAE,IAAI;YACRuC,IAAI,EAAE,0CAA0C;YAChDC,OAAO,EAAE,CACP;cAAExC,EAAE,EAAE,GAAG;cAAEuC,IAAI,EAAE;YAAQ,CAAC,EAC1B;cAAEvC,EAAE,EAAE,GAAG;cAAEuC,IAAI,EAAE;YAAO,CAAC,EACzB;cAAEvC,EAAE,EAAE,GAAG;cAAEuC,IAAI,EAAE;YAAU,CAAC,EAC5B;cAAEvC,EAAE,EAAE,GAAG;cAAEuC,IAAI,EAAE;YAAS,CAAC,CAC5B;YACDE,aAAa,EAAE;UACjB,CAAC,CACF;QACH;;QAEA;QACAT,cAAc,CAACC,SAAS,GAAGD,cAAc,CAACC,SAAS,CAACS,GAAG,CAAC,CAACC,CAAC,EAAEC,KAAK,KAAK;UACpE;UACA,IAAI,CAACD,CAAC,CAAC3C,EAAE,EAAE2C,CAAC,CAAC3C,EAAE,GAAG,IAAI4C,KAAK,GAAG,CAAC,EAAE;;UAEjC;UACA,IAAI,CAACD,CAAC,CAACJ,IAAI,IAAII,CAAC,CAACE,YAAY,EAAEF,CAAC,CAACJ,IAAI,GAAGI,CAAC,CAACE,YAAY;UACtD;UACA,IAAI,CAACF,CAAC,CAACJ,IAAI,IAAI,CAACI,CAAC,CAACE,YAAY,EAAEF,CAAC,CAACJ,IAAI,GAAG,YAAYK,KAAK,GAAG,CAAC,EAAE;;UAEhE;UACA,IAAI,CAACD,CAAC,CAACH,OAAO,IAAI,CAACH,KAAK,CAACC,OAAO,CAACK,CAAC,CAACH,OAAO,CAAC,IAAIG,CAAC,CAACH,OAAO,CAACM,MAAM,KAAK,CAAC,EAAE;YACrEH,CAAC,CAACH,OAAO,GAAG,CACV;cAAExC,EAAE,EAAE,GAAG;cAAEuC,IAAI,EAAE;YAAW,CAAC,EAC7B;cAAEvC,EAAE,EAAE,GAAG;cAAEuC,IAAI,EAAE;YAAW,CAAC,EAC7B;cAAEvC,EAAE,EAAE,GAAG;cAAEuC,IAAI,EAAE;YAAW,CAAC,EAC7B;cAAEvC,EAAE,EAAE,GAAG;cAAEuC,IAAI,EAAE;YAAW,CAAC,CAC9B;UACH;;UAEA;UACAI,CAAC,CAACH,OAAO,GAAGG,CAAC,CAACH,OAAO,CAACE,GAAG,CAAC,CAACK,GAAG,EAAEC,QAAQ,KAAK;YAC3C,IAAI,OAAOD,GAAG,KAAK,QAAQ,EAAE;cAC3B,OAAO;gBAAE/C,EAAE,EAAE,MAAMgD,QAAQ,EAAE;gBAAET,IAAI,EAAEQ;cAAI,CAAC;YAC5C;YACA,IAAI,CAACA,GAAG,CAAC/C,EAAE,EAAE+C,GAAG,CAAC/C,EAAE,GAAG,MAAMgD,QAAQ,EAAE;YACtC,IAAI,CAACD,GAAG,CAACR,IAAI,IAAIQ,GAAG,CAACE,UAAU,EAAEF,GAAG,CAACR,IAAI,GAAGQ,GAAG,CAACE,UAAU;YAC1D,IAAI,CAACF,GAAG,CAACR,IAAI,EAAEQ,GAAG,CAACR,IAAI,GAAG,UAAUS,QAAQ,GAAG,CAAC,EAAE;YAClD,OAAOD,GAAG;UACZ,CAAC,CAAC;UAEF,OAAOJ,CAAC;QACV,CAAC,CAAC;QAEFd,OAAO,CAACC,GAAG,CAAC,4BAA4B,EAAEE,cAAc,CAAC;QACzD3B,aAAa,CAAC2B,cAAc,CAAC;MAC/B,CAAC,MAAM;QACLf,QAAQ,CAAC,sBAAsB,CAAC;MAClC;IACF,CAAC,CAAC,OAAOD,KAAK,EAAE;MACda,OAAO,CAACb,KAAK,CAAC,4BAA4B,EAAEA,KAAK,CAAC;MAClDC,QAAQ,CAAC,+BAA+B,CAAC;IAC3C,CAAC,SAAS;MACRF,UAAU,CAAC,KAAK,CAAC;IACnB;EACF,CAAC;EAED,MAAMmC,kBAAkB,GAAGA,CAACC,UAAU,EAAEC,QAAQ,KAAK;IACnD7C,UAAU,CAAC;MACT,GAAGD,OAAO;MACV,CAAC6C,UAAU,GAAGC;IAChB,CAAC,CAAC;EACJ,CAAC;EAED,MAAMC,kBAAkB,GAAGA,CAAA,KAAM;IAC/B,IAAI,CAACjD,UAAU,EAAE;IAEjB,MAAMkD,iBAAiB,GAAGlD,UAAU,CAAC6B,SAAS,CAACzB,eAAe,CAAC,CAACR,EAAE;IAClE,MAAMuD,cAAc,GAAG;MAAE,GAAGjD;IAAQ,CAAC;IACrC,OAAOiD,cAAc,CAACD,iBAAiB,CAAC;IACxC/C,UAAU,CAACgD,cAAc,CAAC;EAC5B,CAAC;;EAED;EACA,MAAMC,cAAc,GAAGA,CAAA,KAAM;IAC3B,IAAI,CAACpD,UAAU,IAAI,CAACA,UAAU,CAAC6B,SAAS,EAAE,OAAO;MAAEwB,KAAK,EAAE,CAAC;MAAEC,QAAQ,EAAE,CAAC;MAAEC,UAAU,EAAE;IAAE,CAAC;IAEzF,MAAMC,cAAc,GAAGxD,UAAU,CAAC6B,SAAS,CAACa,MAAM;IAClD,MAAMY,QAAQ,GAAGtD,UAAU,CAACsD,QAAQ,IAAI,GAAG,CAAC,CAAC;;IAE7C;IACA,IAAIG,cAAc,GAAG,CAAC;IACtBzD,UAAU,CAAC6B,SAAS,CAAC6B,OAAO,CAACC,QAAQ,IAAI;MACvC,MAAMC,UAAU,GAAG1D,OAAO,CAACyD,QAAQ,CAAC/D,EAAE,CAAC;;MAEvC;MACA,IAAIgE,UAAU,IAAID,QAAQ,CAACtB,aAAa,IAAIuB,UAAU,KAAKD,QAAQ,CAACtB,aAAa,EAAE;QACjFoB,cAAc,EAAE;MAClB;IACF,CAAC,CAAC;IAEFhC,OAAO,CAACC,GAAG,CAAC,oBAAoB+B,cAAc,WAAWD,cAAc,EAAE,CAAC;;IAE1E;IACA,MAAMK,gBAAgB,GAAGP,QAAQ,GAAGE,cAAc;IAClD,MAAMH,KAAK,GAAGS,IAAI,CAACC,KAAK,CAACN,cAAc,GAAGI,gBAAgB,CAAC;IAC3D,MAAMN,UAAU,GAAGO,IAAI,CAACC,KAAK,CAAEN,cAAc,GAAGD,cAAc,GAAI,GAAG,CAAC;IAEtE,OAAO;MACLH,KAAK;MACLC,QAAQ;MACRC,UAAU;MACVE,cAAc;MACdD,cAAc;MACdQ,MAAM,EAAET,UAAU,IAAI,EAAE,CAAC;IAC3B,CAAC;EACH,CAAC;EAED,MAAMU,YAAY,GAAG,MAAAA,CAAA,KAAY;IAC/B,IAAI;MACFtD,UAAU,CAAC,IAAI,CAAC;;MAEhB;MACA,MAAMY,QAAQ,GAAG,MAAMhC,iBAAiB,CAAC2E,gBAAgB,CAACtE,EAAE,EAAEM,OAAO,CAAC;;MAEtE;MACA,MAAMiE,gBAAgB,GAAG;QACvBd,KAAK,EAAE9B,QAAQ,CAACI,IAAI,CAAC0B,KAAK;QAC1BC,QAAQ,EAAE/B,QAAQ,CAACI,IAAI,CAAC2B,QAAQ;QAChCC,UAAU,EAAEhC,QAAQ,CAACI,IAAI,CAAC4B,UAAU;QACpCS,MAAM,EAAEzC,QAAQ,CAACI,IAAI,CAACqC,MAAM;QAC5BP,cAAc,EAAElC,QAAQ,CAACI,IAAI,CAAC8B,cAAc;QAC5CD,cAAc,EAAEjC,QAAQ,CAACI,IAAI,CAAC6B;MAChC,CAAC;MAED/C,SAAS,CAAC0D,gBAAgB,CAAC;MAC3B5D,YAAY,CAAC,IAAI,CAAC;IACpB,CAAC,CAAC,OAAOK,KAAK,EAAE;MACda,OAAO,CAACb,KAAK,CAAC,8BAA8B,EAAEA,KAAK,CAAC;;MAEpD;MACA,MAAMuD,gBAAgB,GAAGf,cAAc,CAAC,CAAC;MACzC3C,SAAS,CAAC0D,gBAAgB,CAAC;MAC3B5D,YAAY,CAAC,IAAI,CAAC;IACpB,CAAC,SAAS;MACRI,UAAU,CAAC,KAAK,CAAC;IACnB;EACF,CAAC;EAED,IAAID,OAAO,EAAE;IACX,oBACEhB,OAAA;MAAK0E,SAAS,EAAC,iBAAiB;MAAAC,QAAA,eAC9B3E,OAAA;QAAK0E,SAAS,EAAC,6BAA6B;QAAC/C,IAAI,EAAC,QAAQ;QAAAgD,QAAA,eACxD3E,OAAA;UAAM0E,SAAS,EAAC,iBAAiB;UAAAC,QAAA,EAAC;QAAqB;UAAAC,QAAA,EAAA9F,YAAA;UAAA+F,UAAA;UAAAC,YAAA;QAAA,OAAM;MAAC;QAAAF,QAAA,EAAA9F,YAAA;QAAA+F,UAAA;QAAAC,YAAA;MAAA,OAC3D;IAAC;MAAAF,QAAA,EAAA9F,YAAA;MAAA+F,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC;EAEV;EAEA,IAAI5D,KAAK,IAAI,CAACZ,UAAU,EAAE;IACxB,oBACEN,OAAA,CAACb,SAAS;MAACuF,SAAS,EAAC,MAAM;MAAAC,QAAA,eACzB3E,OAAA;QAAK0E,SAAS,EAAC,aAAa;QAAAC,QAAA,gBAC1B3E,OAAA;UAAA2E,QAAA,EAAI;QAAoB;UAAAC,QAAA,EAAA9F,YAAA;UAAA+F,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eAC7B9E,OAAA;UAAG0E,SAAS,EAAC,YAAY;UAAAC,QAAA,EAAEzD,KAAK,IAAI;QAAkD;UAAA0D,QAAA,EAAA9F,YAAA;UAAA+F,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eAC3F9E,OAAA,CAACT,MAAM;UAACwF,OAAO,EAAC,SAAS;UAACC,OAAO,EAAEA,CAAA,KAAM7E,QAAQ,CAAC,oBAAoB,CAAE;UAAAwE,QAAA,EAAC;QAEzE;UAAAC,QAAA,EAAA9F,YAAA;UAAA+F,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAF,QAAA,EAAA9F,YAAA;QAAA+F,UAAA;QAAAC,YAAA;MAAA,OACN;IAAC;MAAAF,QAAA,EAAA9F,YAAA;MAAA+F,UAAA;MAAAC,YAAA;IAAA,OACG,CAAC;EAEhB;;EAEA;EACA,IAAI,CAACxE,UAAU,CAAC6B,SAAS,IAAI7B,UAAU,CAAC6B,SAAS,CAACa,MAAM,KAAK,CAAC,EAAE;IAC9D,oBACEhD,OAAA,CAACb,SAAS;MAACuF,SAAS,EAAC,MAAM;MAAAC,QAAA,eACzB3E,OAAA;QAAK0E,SAAS,EAAC,aAAa;QAAAC,QAAA,gBAC1B3E,OAAA;UAAA2E,QAAA,EAAI;QAAsB;UAAAC,QAAA,EAAA9F,YAAA;UAAA+F,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eAC/B9E,OAAA;UAAG0E,SAAS,EAAC,YAAY;UAAAC,QAAA,EAAC;QAA+C;UAAAC,QAAA,EAAA9F,YAAA;UAAA+F,UAAA;UAAAC,YAAA;QAAA,OAAG,CAAC,eAC7E9E,OAAA,CAACT,MAAM;UAACwF,OAAO,EAAC,SAAS;UAACC,OAAO,EAAEA,CAAA,KAAM7E,QAAQ,CAAC,oBAAoB,CAAE;UAAAwE,QAAA,EAAC;QAEzE;UAAAC,QAAA,EAAA9F,YAAA;UAAA+F,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAF,QAAA,EAAA9F,YAAA;QAAA+F,UAAA;QAAAC,YAAA;MAAA,OACN;IAAC;MAAAF,QAAA,EAAA9F,YAAA;MAAA+F,UAAA;MAAAC,YAAA;IAAA,OACG,CAAC;EAEhB;EAEA,IAAIlE,SAAS,IAAIE,MAAM,EAAE;IACvB,oBACEd,OAAA,CAACb,SAAS;MAACuF,SAAS,EAAC,MAAM;MAAAC,QAAA,eACzB3E,OAAA,CAACZ,GAAG;QAACsF,SAAS,EAAC,wBAAwB;QAAAC,QAAA,eACrC3E,OAAA,CAACX,GAAG;UAAC4F,EAAE,EAAE,CAAE;UAAAN,QAAA,eACT3E,OAAA,CAACV,IAAI;YAACoF,SAAS,EAAC,mBAAmB;YAAAC,QAAA,gBACjC3E,OAAA,CAACV,IAAI,CAAC4F,MAAM;cAACR,SAAS,EAAC,aAAa;cAAAC,QAAA,eAClC3E,OAAA;gBAAA2E,QAAA,EAAI;cAAqB;gBAAAC,QAAA,EAAA9F,YAAA;gBAAA+F,UAAA;gBAAAC,YAAA;cAAA,OAAI;YAAC;cAAAF,QAAA,EAAA9F,YAAA;cAAA+F,UAAA;cAAAC,YAAA;YAAA,OACnB,CAAC,eACd9E,OAAA,CAACV,IAAI,CAAC6F,IAAI;cAACT,SAAS,EAAC,aAAa;cAAAC,QAAA,gBAChC3E,OAAA;gBAAK0E,SAAS,EAAC,MAAM;gBAAAC,QAAA,gBACnB3E,OAAA;kBAAK0E,SAAS,EAAC,oBAAoB;kBAAAC,QAAA,GAChC7D,MAAM,CAAC+C,UAAU,EAAC,GACrB;gBAAA;kBAAAe,QAAA,EAAA9F,YAAA;kBAAA+F,UAAA;kBAAAC,YAAA;gBAAA,OAAK,CAAC,eACN9E,OAAA;kBAAA2E,QAAA,GAAI,cACU,EAAC7D,MAAM,CAAC6C,KAAK,EAAC,KAAG,EAAC7C,MAAM,CAAC8C,QAAQ;gBAAA;kBAAAgB,QAAA,EAAA9F,YAAA;kBAAA+F,UAAA;kBAAAC,YAAA;gBAAA,OAC3C,CAAC,eACL9E,OAAA;kBAAA2E,QAAA,GAAG,mBACgB,EAAC7D,MAAM,CAACiD,cAAc,EAAC,KAAG,EAACjD,MAAM,CAACgD,cAAc;gBAAA;kBAAAc,QAAA,EAAA9F,YAAA;kBAAA+F,UAAA;kBAAAC,YAAA;gBAAA,OAChE,CAAC;cAAA;gBAAAF,QAAA,EAAA9F,YAAA;gBAAA+F,UAAA;gBAAAC,YAAA;cAAA,OACD,CAAC,eAGN9E,OAAA,CAACP,KAAK;gBAACsF,OAAO,EAAEjE,MAAM,CAACwD,MAAM,GAAG,SAAS,GAAG,SAAU;gBAAAK,QAAA,EACnD7D,MAAM,CAACwD,MAAM,GACV,6CAA6C,GAC7C;cAAiE;gBAAAM,QAAA,EAAA9F,YAAA;gBAAA+F,UAAA;gBAAAC,YAAA;cAAA,OAChE,CAAC,eAER9E,OAAA;gBAAK0E,SAAS,EAAC,qCAAqC;gBAAAC,QAAA,gBAClD3E,OAAA,CAACT,MAAM;kBAACwF,OAAO,EAAC,SAAS;kBAACC,OAAO,EAAEA,CAAA,KAAM7E,QAAQ,CAAC,oBAAoB,CAAE;kBAAAwE,QAAA,EAAC;gBAEzE;kBAAAC,QAAA,EAAA9F,YAAA;kBAAA+F,UAAA;kBAAAC,YAAA;gBAAA,OAAQ,CAAC,eACT9E,OAAA,CAACT,MAAM;kBAACwF,OAAO,EAAC,iBAAiB;kBAACC,OAAO,EAAEA,CAAA,KAAM;oBAC/CnE,YAAY,CAAC,KAAK,CAAC;oBACnBJ,UAAU,CAAC,CAAC,CAAC,CAAC;oBACdE,kBAAkB,CAAC,CAAC,CAAC;kBACvB,CAAE;kBAAAgE,QAAA,EAAC;gBAEH;kBAAAC,QAAA,EAAA9F,YAAA;kBAAA+F,UAAA;kBAAAC,YAAA;gBAAA,OAAQ,CAAC;cAAA;gBAAAF,QAAA,EAAA9F,YAAA;gBAAA+F,UAAA;gBAAAC,YAAA;cAAA,OACN,CAAC;YAAA;cAAAF,QAAA,EAAA9F,YAAA;cAAA+F,UAAA;cAAAC,YAAA;YAAA,OACG,CAAC;UAAA;YAAAF,QAAA,EAAA9F,YAAA;YAAA+F,UAAA;YAAAC,YAAA;UAAA,OACR;QAAC;UAAAF,QAAA,EAAA9F,YAAA;UAAA+F,UAAA;UAAAC,YAAA;QAAA,OACJ;MAAC;QAAAF,QAAA,EAAA9F,YAAA;QAAA+F,UAAA;QAAAC,YAAA;MAAA,OACH;IAAC;MAAAF,QAAA,EAAA9F,YAAA;MAAA+F,UAAA;MAAAC,YAAA;IAAA,OACG,CAAC;EAEhB;EAEA,MAAMM,QAAQ,GAAG9E,UAAU,CAAC6B,SAAS,CAACzB,eAAe,CAAC;EAEtD,oBACEV,OAAA,CAACb,SAAS;IAACuF,SAAS,EAAC,MAAM;IAAAC,QAAA,GACxBvD,QAAQ,iBACPpB,OAAA;MAAK0E,SAAS,EAAC,MAAM;MAAAC,QAAA,eACnB3E,OAAA,CAACT,MAAM;QACLwF,OAAO,EAAC,mBAAmB;QAC3BC,OAAO,EAAEA,CAAA,KAAM7E,QAAQ,CAAC,wBAAwB,CAAE;QAAAwE,QAAA,EACnD;MAED;QAAAC,QAAA,EAAA9F,YAAA;QAAA+F,UAAA;QAAAC,YAAA;MAAA,OAAQ;IAAC;MAAAF,QAAA,EAAA9F,YAAA;MAAA+F,UAAA;MAAAC,YAAA;IAAA,OACN,CACN,eAED9E,OAAA,CAACZ,GAAG;MAAAuF,QAAA,gBACF3E,OAAA,CAACX,GAAG;QAAC4F,EAAE,EAAE,CAAE;QAAAN,QAAA,eACT3E,OAAA,CAACV,IAAI;UAAAqF,QAAA,gBACH3E,OAAA,CAACV,IAAI,CAAC4F,MAAM;YAACR,SAAS,EAAC,mDAAmD;YAAAC,QAAA,gBACxE3E,OAAA;cAAA2E,QAAA,EAAKrE,UAAU,CAAC+E,KAAK,IAAI;YAAY;cAAAT,QAAA,EAAA9F,YAAA;cAAA+F,UAAA;cAAAC,YAAA;YAAA,OAAK,CAAC,eAC3C9E,OAAA;cAAK0E,SAAS,EAAC,iCAAiC;cAAAC,QAAA,eAC9C3E,OAAA;gBAAA2E,QAAA,GAAM,WACK,EAACjE,eAAe,GAAG,CAAC,EAAC,MAAI,EAACJ,UAAU,CAAC6B,SAAS,CAACa,MAAM;cAAA;gBAAA4B,QAAA,EAAA9F,YAAA;gBAAA+F,UAAA;gBAAAC,YAAA;cAAA,OAC1D;YAAC;cAAAF,QAAA,EAAA9F,YAAA;cAAA+F,UAAA;cAAAC,YAAA;YAAA,OACJ,CAAC;UAAA;YAAAF,QAAA,EAAA9F,YAAA;YAAA+F,UAAA;YAAAC,YAAA;UAAA,OACK,CAAC,eACd9E,OAAA,CAACV,IAAI,CAAC6F,IAAI;YAAAR,QAAA,gBACR3E,OAAA;cAAK0E,SAAS,EAAC,qBAAqB;cAAAC,QAAA,gBAClC3E,OAAA;gBAAI0E,SAAS,EAAC,MAAM;gBAAAC,QAAA,EAAES,QAAQ,CAAC3C;cAAI;gBAAAmC,QAAA,EAAA9F,YAAA;gBAAA+F,UAAA;gBAAAC,YAAA;cAAA,OAAK,CAAC,eACzC9E,OAAA;gBAAK0E,SAAS,EAAC,mBAAmB;gBAAAC,QAAA,EAC/BS,QAAQ,CAAC1C,OAAO,CAACE,GAAG,CAAE0C,MAAM,iBAC3BtF,OAAA;kBAEE0E,SAAS,EAAE,eAAelE,OAAO,CAAC4E,QAAQ,CAAClF,EAAE,CAAC,KAAKoF,MAAM,CAACpF,EAAE,GAAG,UAAU,GAAG,EAAE,EAAG;kBACjF8E,OAAO,EAAEA,CAAA,KAAM5B,kBAAkB,CAACgC,QAAQ,CAAClF,EAAE,EAAEoF,MAAM,CAACpF,EAAE,CAAE;kBAAAyE,QAAA,eAE1D3E,OAAA;oBAAK0E,SAAS,EAAC,gBAAgB;oBAAAC,QAAA,gBAC7B3E,OAAA;sBAAK0E,SAAS,EAAC,cAAc;sBAAAC,QAAA,EAC1BnE,OAAO,CAAC4E,QAAQ,CAAClF,EAAE,CAAC,KAAKoF,MAAM,CAACpF,EAAE,iBAAIF,OAAA;wBAAK0E,SAAS,EAAC;sBAAW;wBAAAE,QAAA,EAAA9F,YAAA;wBAAA+F,UAAA;wBAAAC,YAAA;sBAAA,OAAM;oBAAC;sBAAAF,QAAA,EAAA9F,YAAA;sBAAA+F,UAAA;sBAAAC,YAAA;oBAAA,OACrE,CAAC,eACN9E,OAAA;sBAAM0E,SAAS,EAAC,aAAa;sBAAAC,QAAA,EAAEW,MAAM,CAAC7C;oBAAI;sBAAAmC,QAAA,EAAA9F,YAAA;sBAAA+F,UAAA;sBAAAC,YAAA;oBAAA,OAAO,CAAC;kBAAA;oBAAAF,QAAA,EAAA9F,YAAA;oBAAA+F,UAAA;oBAAAC,YAAA;kBAAA,OAC/C;gBAAC,GATDQ,MAAM,CAACpF,EAAE;kBAAA0E,QAAA,EAAA9F,YAAA;kBAAA+F,UAAA;kBAAAC,YAAA;gBAAA,OAUX,CACN;cAAC;gBAAAF,QAAA,EAAA9F,YAAA;gBAAA+F,UAAA;gBAAAC,YAAA;cAAA,OACC,CAAC,eAEN9E,OAAA;gBAAK0E,SAAS,EAAC,iCAAiC;gBAAAC,QAAA,eAC9C3E,OAAA,CAACT,MAAM;kBACLwF,OAAO,EAAC,mBAAmB;kBAC3BQ,IAAI,EAAC,IAAI;kBACTP,OAAO,EAAEzB,kBAAmB;kBAC5BiC,QAAQ,EAAE,CAAChF,OAAO,CAAC4E,QAAQ,CAAClF,EAAE,CAAE;kBAAAyE,QAAA,EACjC;gBAED;kBAAAC,QAAA,EAAA9F,YAAA;kBAAA+F,UAAA;kBAAAC,YAAA;gBAAA,OAAQ;cAAC;gBAAAF,QAAA,EAAA9F,YAAA;gBAAA+F,UAAA;gBAAAC,YAAA;cAAA,OACN,CAAC;YAAA;cAAAF,QAAA,EAAA9F,YAAA;cAAA+F,UAAA;cAAAC,YAAA;YAAA,OACH,CAAC,eAEN9E,OAAA;cAAK0E,SAAS,EAAC,qCAAqC;cAAAC,QAAA,gBAClD3E,OAAA,CAACT,MAAM;gBACLwF,OAAO,EAAC,mBAAmB;gBAC3BS,QAAQ,EAAE9E,eAAe,KAAK,CAAE;gBAChCsE,OAAO,EAAEA,CAAA,KAAMrE,kBAAkB,CAACD,eAAe,GAAG,CAAC,CAAE;gBAAAiE,QAAA,EACxD;cAED;gBAAAC,QAAA,EAAA9F,YAAA;gBAAA+F,UAAA;gBAAAC,YAAA;cAAA,OAAQ,CAAC,EAERpE,eAAe,KAAKJ,UAAU,CAAC6B,SAAS,CAACa,MAAM,GAAG,CAAC,gBAClDhD,OAAA,CAACT,MAAM;gBAACwF,OAAO,EAAC,SAAS;gBAACC,OAAO,EAAET,YAAa;gBAAAI,QAAA,EAAC;cAEjD;gBAAAC,QAAA,EAAA9F,YAAA;gBAAA+F,UAAA;gBAAAC,YAAA;cAAA,OAAQ,CAAC,gBAET9E,OAAA,CAACT,MAAM;gBAACwF,OAAO,EAAC,SAAS;gBAACC,OAAO,EAAEA,CAAA,KAAMrE,kBAAkB,CAACD,eAAe,GAAG,CAAC,CAAE;gBAAAiE,QAAA,EAAC;cAElF;gBAAAC,QAAA,EAAA9F,YAAA;gBAAA+F,UAAA;gBAAAC,YAAA;cAAA,OAAQ,CACT;YAAA;cAAAF,QAAA,EAAA9F,YAAA;cAAA+F,UAAA;cAAAC,YAAA;YAAA,OACE,CAAC;UAAA;YAAAF,QAAA,EAAA9F,YAAA;YAAA+F,UAAA;YAAAC,YAAA;UAAA,OACG,CAAC;QAAA;UAAAF,QAAA,EAAA9F,YAAA;UAAA+F,UAAA;UAAAC,YAAA;QAAA,OACR;MAAC;QAAAF,QAAA,EAAA9F,YAAA;QAAA+F,UAAA;QAAAC,YAAA;MAAA,OACJ,CAAC,eAEN9E,OAAA,CAACX,GAAG;QAAC4F,EAAE,EAAE,CAAE;QAAAN,QAAA,gBACT3E,OAAA,CAACV,IAAI;UAAAqF,QAAA,gBACH3E,OAAA,CAACV,IAAI,CAAC4F,MAAM;YAAAP,QAAA,eACV3E,OAAA;cAAI0E,SAAS,EAAC,MAAM;cAAAC,QAAA,EAAC;YAAmB;cAAAC,QAAA,EAAA9F,YAAA;cAAA+F,UAAA;cAAAC,YAAA;YAAA,OAAI;UAAC;YAAAF,QAAA,EAAA9F,YAAA;YAAA+F,UAAA;YAAAC,YAAA;UAAA,OAClC,CAAC,eACd9E,OAAA,CAACV,IAAI,CAAC6F,IAAI;YAAAR,QAAA,gBACR3E,OAAA;cAAK0E,SAAS,EAAC,MAAM;cAAAC,QAAA,gBACnB3E,OAAA;gBAAK0E,SAAS,EAAC,qCAAqC;gBAAAC,QAAA,gBAClD3E,OAAA;kBAAA2E,QAAA,EAAM;gBAAQ;kBAAAC,QAAA,EAAA9F,YAAA;kBAAA+F,UAAA;kBAAAC,YAAA;gBAAA,OAAM,CAAC,eACrB9E,OAAA;kBAAA2E,QAAA,GAAOP,IAAI,CAACC,KAAK,CAAE,CAAC3D,eAAe,GAAG,CAAC,IAAIJ,UAAU,CAAC6B,SAAS,CAACa,MAAM,GAAI,GAAG,CAAC,EAAC,GAAC;gBAAA;kBAAA4B,QAAA,EAAA9F,YAAA;kBAAA+F,UAAA;kBAAAC,YAAA;gBAAA,OAAM,CAAC;cAAA;gBAAAF,QAAA,EAAA9F,YAAA;gBAAA+F,UAAA;gBAAAC,YAAA;cAAA,OACpF,CAAC,eACN9E,OAAA;gBAAK0E,SAAS,EAAC,UAAU;gBAAAC,QAAA,eACvB3E,OAAA;kBACE0E,SAAS,EAAC,cAAc;kBACxBe,KAAK,EAAE;oBAAEC,KAAK,EAAE,GAAI,CAAChF,eAAe,GAAG,CAAC,IAAIJ,UAAU,CAAC6B,SAAS,CAACa,MAAM,GAAI,GAAG;kBAAI;gBAAE;kBAAA4B,QAAA,EAAA9F,YAAA;kBAAA+F,UAAA;kBAAAC,YAAA;gBAAA,OAChF;cAAC;gBAAAF,QAAA,EAAA9F,YAAA;gBAAA+F,UAAA;gBAAAC,YAAA;cAAA,OACJ,CAAC;YAAA;cAAAF,QAAA,EAAA9F,YAAA;cAAA+F,UAAA;cAAAC,YAAA;YAAA,OACH,CAAC,eAEN9E,OAAA;cAAK0E,SAAS,EAAC,MAAM;cAAAC,QAAA,gBACnB3E,OAAA;gBAAA2E,QAAA,EAAQ;cAAmB;gBAAAC,QAAA,EAAA9F,YAAA;gBAAA+F,UAAA;gBAAAC,YAAA;cAAA,OAAQ,CAAC,eACpC9E,OAAA;gBAAM0E,SAAS,EAAC,MAAM;gBAAAC,QAAA,GACnBgB,MAAM,CAACC,IAAI,CAACpF,OAAO,CAAC,CAACwC,MAAM,EAAC,KAAG,EAAC1C,UAAU,CAAC6B,SAAS,CAACa,MAAM;cAAA;gBAAA4B,QAAA,EAAA9F,YAAA;gBAAA+F,UAAA;gBAAAC,YAAA;cAAA,OACxD,CAAC;YAAA;cAAAF,QAAA,EAAA9F,YAAA;cAAA+F,UAAA;cAAAC,YAAA;YAAA,OACJ,CAAC,eAEN9E,OAAA;cAAK0E,SAAS,EAAC,MAAM;cAAAC,QAAA,gBACnB3E,OAAA;gBAAA2E,QAAA,EAAQ;cAAU;gBAAAC,QAAA,EAAA9F,YAAA;gBAAA+F,UAAA;gBAAAC,YAAA;cAAA,OAAQ,CAAC,eAC3B9E,OAAA;gBAAM0E,SAAS,EAAC,MAAM;gBAAAC,QAAA,EAAErE,UAAU,CAACsD,QAAQ,IAAI;cAAG;gBAAAgB,QAAA,EAAA9F,YAAA;gBAAA+F,UAAA;gBAAAC,YAAA;cAAA,OAAO,CAAC;YAAA;cAAAF,QAAA,EAAA9F,YAAA;cAAA+F,UAAA;cAAAC,YAAA;YAAA,OACvD,CAAC;UAAA;YAAAF,QAAA,EAAA9F,YAAA;YAAA+F,UAAA;YAAAC,YAAA;UAAA,OACG,CAAC;QAAA;UAAAF,QAAA,EAAA9F,YAAA;UAAA+F,UAAA;UAAAC,YAAA;QAAA,OACR,CAAC,eAEP9E,OAAA,CAACV,IAAI;UAACoF,SAAS,EAAC,MAAM;UAAAC,QAAA,gBACpB3E,OAAA,CAACV,IAAI,CAAC4F,MAAM;YAAAP,QAAA,eACV3E,OAAA;cAAI0E,SAAS,EAAC,MAAM;cAAAC,QAAA,EAAC;YAAkB;cAAAC,QAAA,EAAA9F,YAAA;cAAA+F,UAAA;cAAAC,YAAA;YAAA,OAAI;UAAC;YAAAF,QAAA,EAAA9F,YAAA;YAAA+F,UAAA;YAAAC,YAAA;UAAA,OACjC,CAAC,eACd9E,OAAA,CAACV,IAAI,CAAC6F,IAAI;YAAAR,QAAA,eACR3E,OAAA;cAAK0E,SAAS,EAAC,2CAA2C;cAAAC,QAAA,EACvDrE,UAAU,CAAC6B,SAAS,CAACS,GAAG,CAAC,CAACiD,CAAC,EAAE/C,KAAK,kBACjC9C,OAAA,CAACT,MAAM;gBAELwF,OAAO,EACLjC,KAAK,KAAKpC,eAAe,GACrB,SAAS,GACTF,OAAO,CAACF,UAAU,CAAC6B,SAAS,CAACW,KAAK,CAAC,CAAC5C,EAAE,CAAC,GACrC,SAAS,GACT,mBACP;gBACDqF,IAAI,EAAC,IAAI;gBACTP,OAAO,EAAEA,CAAA,KAAMrE,kBAAkB,CAACmC,KAAK,CAAE;gBAAA6B,QAAA,EAExC7B,KAAK,GAAG;cAAC,GAXLA,KAAK;gBAAA8B,QAAA,EAAA9F,YAAA;gBAAA+F,UAAA;gBAAAC,YAAA;cAAA,OAYJ,CACT;YAAC;cAAAF,QAAA,EAAA9F,YAAA;cAAA+F,UAAA;cAAAC,YAAA;YAAA,OACC;UAAC;YAAAF,QAAA,EAAA9F,YAAA;YAAA+F,UAAA;YAAAC,YAAA;UAAA,OACG,CAAC;QAAA;UAAAF,QAAA,EAAA9F,YAAA;UAAA+F,UAAA;UAAAC,YAAA;QAAA,OACR,CAAC;MAAA;QAAAF,QAAA,EAAA9F,YAAA;QAAA+F,UAAA;QAAAC,YAAA;MAAA,OACJ,CAAC;IAAA;MAAAF,QAAA,EAAA9F,YAAA;MAAA+F,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC;EAAA;IAAAF,QAAA,EAAA9F,YAAA;IAAA+F,UAAA;IAAAC,YAAA;EAAA,OACG,CAAC;AAEhB,CAAC;AAAA/F,EAAA,CA1bKkB,cAAc;EAAA,QACHP,SAAS,EACPC,WAAW,EACXC,WAAW,EACXE,OAAO;AAAA;AAAAgG,EAAA,GAJpB7F,cAAc;AA4bpB,eAAeA,cAAc;AAAA,IAAA6F,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}