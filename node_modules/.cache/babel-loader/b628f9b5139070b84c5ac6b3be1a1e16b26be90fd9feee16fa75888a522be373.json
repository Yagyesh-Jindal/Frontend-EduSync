{"ast":null,"code":"\"use client\";\n\nvar _jsxFileName = \"E:\\\\project-capg\\\\frontend\\\\src\\\\contexts\\\\AuthContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport { createContext, useContext, useState, useEffect } from \"react\";\nimport { authAPI } from \"../services/api\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\nexport const useAuth = () => {\n  _s();\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error(\"useAuth must be used within an AuthProvider\");\n  }\n  return context;\n};\n_s(useAuth, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nexport const AuthProvider = ({\n  children\n}) => {\n  _s2();\n  const [user, setUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    // Check for existing session on app load\n    const token = localStorage.getItem(\"token\");\n    const userData = localStorage.getItem(\"user\");\n    if (token && userData && userData !== \"undefined\") {\n      try {\n        const parsedUser = JSON.parse(userData);\n        // Ensure we have all required user properties\n        if (!parsedUser.name || parsedUser.name === 'User') {\n          // If name is missing or default, try to get it from backend\n          refreshUserData(token, parsedUser);\n        } else {\n          setUser(parsedUser);\n        }\n        // Set default authorization header\n        authAPI.defaults.headers.common[\"Authorization\"] = `Bearer ${token}`;\n      } catch (error) {\n        console.error(\"Error parsing user data:\", error);\n        localStorage.removeItem(\"token\");\n        localStorage.removeItem(\"user\");\n      }\n    }\n    setLoading(false);\n  }, []);\n\n  // Function to refresh user data from backend\n  const refreshUserData = async (token, currentUserData) => {\n    try {\n      // Set the token for the request\n      authAPI.defaults.headers.common[\"Authorization\"] = `Bearer ${token}`;\n\n      // Get fresh user data from backend (you may need to create this endpoint)\n      const response = await authAPI.get(\"/users/profile\");\n      if (response.data) {\n        const updatedUserData = {\n          ...currentUserData,\n          name: response.data.name || currentUserData.name,\n          role: response.data.role || currentUserData.role\n        };\n\n        // Update localStorage and state\n        localStorage.setItem(\"user\", JSON.stringify(updatedUserData));\n        setUser(updatedUserData);\n      } else {\n        setUser(currentUserData);\n      }\n    } catch (error) {\n      console.error(\"Error refreshing user data:\", error);\n      setUser(currentUserData);\n    }\n  };\n  const login = async (email, password) => {\n    try {\n      const response = await authAPI.post(\"/auth/login\", {\n        email,\n        password\n      });\n      const {\n        token,\n        user: userData\n      } = response.data;\n\n      // Store in localStorage\n      localStorage.setItem(\"token\", token);\n      localStorage.setItem(\"user\", JSON.stringify(userData));\n\n      // Set authorization header\n      authAPI.defaults.headers.common[\"Authorization\"] = `Bearer ${token}`;\n      setUser(userData);\n      return {\n        success: true,\n        user: userData\n      };\n    } catch (error) {\n      var _error$response, _error$response$data;\n      console.error(\"Login error:\", error);\n      return {\n        success: false,\n        error: ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.message) || \"Login failed\"\n      };\n    }\n  };\n  const register = async userData => {\n    try {\n      const response = await authAPI.post(\"/auth/register\", userData);\n      return {\n        success: true,\n        data: response.data\n      };\n    } catch (error) {\n      var _error$response2, _error$response2$data;\n      console.error(\"Registration error:\", error);\n      return {\n        success: false,\n        error: ((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : (_error$response2$data = _error$response2.data) === null || _error$response2$data === void 0 ? void 0 : _error$response2$data.message) || \"Registration failed\"\n      };\n    }\n  };\n  const logout = () => {\n    localStorage.removeItem(\"token\");\n    localStorage.removeItem(\"user\");\n    delete authAPI.defaults.headers.common[\"Authorization\"];\n    setUser(null);\n  };\n  const value = {\n    user,\n    login,\n    register,\n    logout,\n    loading\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 125,\n    columnNumber: 10\n  }, this);\n};\n_s2(AuthProvider, \"NiO5z6JIqzX62LS5UWDgIqbZYyY=\");\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["_jsxFileName","_s","$RefreshSig$","_s2","createContext","useContext","useState","useEffect","authAPI","jsxDEV","_jsxDEV","AuthContext","useAuth","context","Error","AuthProvider","children","user","setUser","loading","setLoading","token","localStorage","getItem","userData","parsedUser","JSON","parse","name","refreshUserData","defaults","headers","common","error","console","removeItem","currentUserData","response","get","data","updatedUserData","role","setItem","stringify","login","email","password","post","success","_error$response","_error$response$data","message","register","_error$response2","_error$response2$data","logout","value","Provider","fileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["E:/project-capg/frontend/src/contexts/AuthContext.js"],"sourcesContent":["\"use client\"\n\nimport { createContext, useContext, useState, useEffect } from \"react\"\nimport { authAPI } from \"../services/api\"\n\nconst AuthContext = createContext()\n\nexport const useAuth = () => {\n  const context = useContext(AuthContext)\n  if (!context) {\n    throw new Error(\"useAuth must be used within an AuthProvider\")\n  }\n  return context\n}\n\nexport const AuthProvider = ({ children }) => {\n  const [user, setUser] = useState(null)\n  const [loading, setLoading] = useState(true)\n\n  useEffect(() => {\n    // Check for existing session on app load\n    const token = localStorage.getItem(\"token\")\n    const userData = localStorage.getItem(\"user\")\n\n    if (token && userData && userData !== \"undefined\") {\n      try {\n        const parsedUser = JSON.parse(userData)\n        // Ensure we have all required user properties\n        if (!parsedUser.name || parsedUser.name === 'User') {\n          // If name is missing or default, try to get it from backend\n          refreshUserData(token, parsedUser)\n        } else {\n          setUser(parsedUser)\n        }\n        // Set default authorization header\n        authAPI.defaults.headers.common[\"Authorization\"] = `Bearer ${token}`\n      } catch (error) {\n        console.error(\"Error parsing user data:\", error)\n        localStorage.removeItem(\"token\")\n        localStorage.removeItem(\"user\")\n      }\n    }\n    setLoading(false)\n  }, [])\n\n  // Function to refresh user data from backend\n  const refreshUserData = async (token, currentUserData) => {\n    try {\n      // Set the token for the request\n      authAPI.defaults.headers.common[\"Authorization\"] = `Bearer ${token}`\n      \n      // Get fresh user data from backend (you may need to create this endpoint)\n      const response = await authAPI.get(\"/users/profile\")\n      \n      if (response.data) {\n        const updatedUserData = {\n          ...currentUserData,\n          name: response.data.name || currentUserData.name,\n          role: response.data.role || currentUserData.role\n        }\n        \n        // Update localStorage and state\n        localStorage.setItem(\"user\", JSON.stringify(updatedUserData))\n        setUser(updatedUserData)\n      } else {\n        setUser(currentUserData)\n      }\n    } catch (error) {\n      console.error(\"Error refreshing user data:\", error)\n      setUser(currentUserData)\n    }\n  }\n\n  const login = async (email, password) => {\n    try {\n      const response = await authAPI.post(\"/auth/login\", { email, password })\n      const { token, user: userData } = response.data\n\n      // Store in localStorage\n      localStorage.setItem(\"token\", token)\n      localStorage.setItem(\"user\", JSON.stringify(userData))\n\n      // Set authorization header\n      authAPI.defaults.headers.common[\"Authorization\"] = `Bearer ${token}`\n\n      setUser(userData)\n      return { success: true, user: userData }\n    } catch (error) {\n      console.error(\"Login error:\", error)\n      return {\n        success: false,\n        error: error.response?.data?.message || \"Login failed\",\n      }\n    }\n  }\n\n  const register = async (userData) => {\n    try {\n      const response = await authAPI.post(\"/auth/register\", userData)\n      return { success: true, data: response.data }\n    } catch (error) {\n      console.error(\"Registration error:\", error)\n      return {\n        success: false,\n        error: error.response?.data?.message || \"Registration failed\",\n      }\n    }\n  }\n\n  const logout = () => {\n    localStorage.removeItem(\"token\")\n    localStorage.removeItem(\"user\")\n    delete authAPI.defaults.headers.common[\"Authorization\"]\n    setUser(null)\n  }\n\n  const value = {\n    user,\n    login,\n    register,\n    logout,\n    loading,\n  }\n\n  return <AuthContext.Provider value={value}>{children}</AuthContext.Provider>\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}