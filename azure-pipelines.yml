# Node.js with React
# Build a Node.js project that uses React.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/javascript

trigger:
  branches:
    include:
      - master

pool:
  vmImage: 'ubuntu-latest'

steps:
- task: NodeTool@0
  inputs:
    versionSpec: '18.x'
  displayName: 'Install Node.js'

# Check current directory structure for debugging
- script: |
    echo "Current directory: $(pwd)"
    echo "Directory contents:"
    ls -la
    echo "Repository root directory contents:"
    ls -la $(Build.SourcesDirectory)
  displayName: 'Check working directory'

# Use conditional logic to determine where to run the build
- script: |
    if [ -d "$(Build.SourcesDirectory)/frontend" ]; then
      echo "Frontend directory found at $(Build.SourcesDirectory)/frontend"
      cd $(Build.SourcesDirectory)/frontend
    else
      echo "Frontend directory not found at expected path, assuming we're already in it"
    fi
    
    npm ci
  displayName: 'npm install'

- script: |
    if [ -d "$(Build.SourcesDirectory)/frontend" ]; then
      cd $(Build.SourcesDirectory)/frontend
    fi
    
    chmod +x node_modules/.bin/react-scripts || echo "Could not chmod react-scripts, continuing anyway"
    npm run build
  displayName: 'npm build'

# Check build output directory
- script: |
    if [ -d "$(Build.SourcesDirectory)/frontend" ]; then
      cd $(Build.SourcesDirectory)/frontend
    fi
    
    echo "Contents of current directory:"
    ls -la
    
    if [ -d "build" ]; then
      echo "Build directory found, contents:"
      ls -la build
    else
      echo "Build directory not found!"
      echo "Checking other possible locations..."
      find $(Build.SourcesDirectory) -name "build" -type d
    fi
  displayName: 'Check build output'

- task: CopyFiles@2
  inputs:
    sourceFolder: '$(Build.SourcesDirectory)'
    contents: '**/build/**'
    targetFolder: '$(Build.ArtifactStagingDirectory)'
  displayName: 'Copy build files'
  continueOnError: true

- task: PublishBuildArtifacts@1
  inputs:
    pathtoPublish: '$(Build.ArtifactStagingDirectory)'
    artifactName: 'frontend-build'
  displayName: 'Publish artifacts'
  continueOnError: true
